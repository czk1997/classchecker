<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sh.otk.classchecker.classes.dao.ClassesMapper">
  <resultMap id="BaseResultMap" type="sh.otk.classchecker.classes.model.Classes">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="CLASS_ID" jdbcType="INTEGER" property="classId" />
    <result column="SUBJECT" jdbcType="VARCHAR" property="subject" />
    <result column="CLASS_URL" jdbcType="VARCHAR" property="classUrl" />
    <result column="TERM" jdbcType="INTEGER" property="term" />
    <result column="CLASS_NUM" jdbcType="INTEGER" property="classNum" />
    <result column="CLASS_TITTLE" jdbcType="VARCHAR" property="classTittle" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    CLASS_ID, SUBJECT, CLASS_URL, TERM, CLASS_NUM, CLASS_TITTLE
  </sql>
  <select id="selectByExample" parameterType="sh.otk.classchecker.classes.model.ClassesExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="sh.otk.classchecker.classes.model.ClassesExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="sh.otk.classchecker.classes.model.ClassesExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update classes
    <set>
      <if test="record.classId != null">
        CLASS_ID = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.subject != null">
        SUBJECT = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.classUrl != null">
        CLASS_URL = #{record.classUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.term != null">
        TERM = #{record.term,jdbcType=INTEGER},
      </if>
      <if test="record.classNum != null">
        CLASS_NUM = #{record.classNum,jdbcType=INTEGER},
      </if>
      <if test="record.classTittle != null">
        CLASS_TITTLE = #{record.classTittle,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update classes
    set CLASS_ID = #{record.classId,jdbcType=INTEGER},
      SUBJECT = #{record.subject,jdbcType=VARCHAR},
      CLASS_URL = #{record.classUrl,jdbcType=VARCHAR},
      TERM = #{record.term,jdbcType=INTEGER},
      CLASS_NUM = #{record.classNum,jdbcType=INTEGER},
      CLASS_TITTLE = #{record.classTittle,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>